public static int get_ans(int N, List<Integer> A) {

    int MAX = 1_000_001;
    int MOD = 1_000_000_007;

    int[] freq = new int[MAX];
    for (int a : A) {
        freq[a]++;
    }

    int[] divisorCount = new int[MAX];
    for (int i = 1; i < MAX; i++) {
        for (int j = i; j < MAX; j += i) {
            divisorCount[j]++;
        }
    }

    long totalBeauty = 0;
    for (int i = 1; i < MAX; i++) {
        if (freq[i] == 0) continue;
        long cnt = freq[i];
        long pairWithOthers = cnt * (N - cnt);
        totalBeauty = (totalBeauty + pairWithOthers % MOD * divisorCount[i] % MOD) % MOD;
    }

    long[] multipleCount = new long[MAX];
    for (int i = 1; i < MAX; i++) {
        for (int j = i; j < MAX; j += i) {
            multipleCount[i] += freq[j];
        }
    }

    for (int g = 1; g < MAX; g++) {
        long cnt = multipleCount[g];
        if (cnt >= 2) {
            long pairCount = cnt * (cnt - 1) / 2;
            totalBeauty = (totalBeauty - 2 * pairCount % MOD + MOD) % MOD;
        }
    }

    return (int) totalBeauty;
}

public static void main(String[] args) {

    Scanner scan = new Scanner(System.in);

    int N = Integer.parseInt(scan.nextLine().trim());

    List<Integer> A = new ArrayList<>(N);

    for (int j = 0; j < N; j++) {
        A.add(Integer.parseInt(scan.nextLine().trim()));
    }

    int result = get_ans(N, A);

    System.out.println(result);

    scan.close();
}
